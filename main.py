# Import libraries
import time
import telebot
from telebot import types
import mysql.connector

# The variable for the token to connect to the bot
TOKEN = "TOKEN"
bot = telebot.TeleBot(TOKEN, parse_mode="HTML")

# A function that allows you to access the database
def open_db():
    global db
    global cursor
    db = mysql.connector.connect(
        host="HOST",
        user="USER",
        password="PASSWORD",
        database="DATABASE"
    )
    cursor = db.cursor()

# A function that closes access to the database
def close_db():
    cursor.close()
    db.close()

# A function to receive data from the user, make a record in the database
# and show the main menu
@bot.message_handler(commands=["start"])
def start(message):
    user_data = (message.from_user.id, message.from_user.username)
    open_db()
    try:
        cursor.execute("""INSERT INTO user (id, username) VALUES (%s, %s);""",
                       user_data)
        db.commit()
    except:
        db.rollback()
    db.close()

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button1 = types.KeyboardButton("üß© –í–∏–±—Ä–∞—Ç–∏ –≥—Ä—É")
    button2 = types.KeyboardButton("üíµ –ü—ñ–¥—Ç—Ä–∏–º–∞—Ç–∏")
    markup.add(button1, button2)
    bot.send_message(message.chat.id, f"<b>–í—ñ—Ç–∞—é @{message.from_user.username}!</b>\n", reply_markup=markup)


# The main function that allows you to receive messages sent by the user
@bot.message_handler(content_types=["text"])
def bot_message(message):

	# A function that receives the value of a specific user
    def get_value(i):
        open_db()
        cursor.execute(f"""SELECT {i} FROM user WHERE id = %s""",
                       [message.from_user.id])
        value = cursor.fetchone()[0]
        close_db()
        return value

	# A function that updates the value of a specific user
    def update_value(i, value):
        open_db()
        cursor.execute(f"""UPDATE user SET {i} = %s WHERE id = %s""",
                       [value, message.from_user.id])
        db.commit()
        close_db()

	# Game_–ö–∞–∑–∏–Ω–æ: A function that allows you to choose a bet
    def rate_menu(money):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        button1 = types.KeyboardButton(f"üü¢ –ö—Ä—É—Ç–∏—Ç–∏ (–°—Ç–∞–≤–∫–∞: {money} fr)")
        button2 = types.KeyboardButton("üßø –ü–æ—Å—Ç–∞–≤–∏—Ç–∏ —ñ–Ω—à—É —Å—Ç–∞–≤–∫—É")
        button_back = types.KeyboardButton("üê∏ –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –º–µ–Ω—é")
        markup.add(button1, button2, button_back)
        bot.send_message(message.chat.id, f"<i>–°—Ç–∞–≤–∫–∞: {money} fr üíµ</i>", reply_markup=markup)
        return message.text

	# Game_–ö–∞–∑–∏–Ω–æ: The function that calculates the winnings
    def rate_calc(money, win1, win2, win3, win4):
        if get_value('balance') < money:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
            button1 = types.KeyboardButton("üé∞ –ö–∞–∑–∏–Ω–æ")
            button2 = types.KeyboardButton("üéØ –î–∞—Ä—Ç—Å")
            button3 = types.KeyboardButton("üé≥ –ë–æ—É–ª—ñ–Ω–≥")
            button4 = types.KeyboardButton("üí∞ –ë–∞–ª–∞–Ω—Å")
            button_back = types.KeyboardButton("üõèÔ∏è –ù–∞ –≥–æ–ª–æ–≤–Ω—É")
            markup.add(button1, button2, button3, button4, button_back)
            bot.send_message(message.chat.id, money_false_message, reply_markup=markup)
        else:
            sent = bot.send_dice(message.chat.id, "üé∞")
            value = sent.dice.value

            if value == 1:
                new_balance = get_value('balance') + win1
                update_value('balance', new_balance)
                time.sleep(2.1)
                bot.send_message(message.chat.id, f"<i>+{win1} fr üçæ <b>–¢–≤—ñ–π –±–∞–ª–∞–Ω—Å: {get_value('balance')} fr</b></i>")
            elif value == 22:
                new_balance = get_value('balance') + win2
                update_value('balance', new_balance)
                time.sleep(2.1)
                bot.send_message(message.chat.id, f"<i>+{win2} fr üçæ <b>–¢–≤—ñ–π –±–∞–ª–∞–Ω—Å: {get_value('balance')} fr</b></i>")
            elif value == 43:
                new_balance = get_value('balance') + win3
                update_value('balance', new_balance)
                time.sleep(2.1)
                bot.send_message(message.chat.id, f"<i>+{win3} fr üçæ <b>–¢–≤—ñ–π –±–∞–ª–∞–Ω—Å: {get_value('balance')} fr</b></i>")
            elif value == 64:
                new_balance = get_value('balance') + win4
                update_value('balance', new_balance)
                time.sleep(2.1)
                bot.send_message(message.chat.id, f"<i>+{win4} fr üçæ <b>–¢–≤—ñ–π –±–∞–ª–∞–Ω—Å: {get_value('balance')} fr</b></i>")
            else:
                new_balance = get_value('balance') - money
                update_value('balance', new_balance)
                time.sleep(2.1)
                bot.send_message(message.chat.id, f"<i>-{money} fr! <b>–¢–≤—ñ–π –±–∞–ª–∞–Ω—Å: {get_value('balance')} fr</b></i>")

	# Game_–î–∞—Ä—Ç—Å: The function checks (not perfectly) whether the user is playing fair
	# and allows darts to be thrown
    def throw_dart(t, m):
        if get_value('points') > 15:
            games_menu("<b>–ñ–∞–±–µ–Ω—è –Ω–µ –∑–∞–¥–æ–≤–æ–ª–µ–Ω–µ, —â–æ —Ç–∏ –≥—Ä–∞—î—à –Ω–µ—á–µ—Å–Ω–æ :(</b>")
        else:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            button1 = types.KeyboardButton(t)
            button_back = types.KeyboardButton("üê∏ –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –º–µ–Ω—é")
            markup.add(button1, button_back)
            bot.send_message(message.chat.id, m, reply_markup=markup)
            sent = bot.send_dice(message.chat.id, "üéØ")
            value = sent.dice.value

            if value == 1:
                point = get_value('points') + 0
            elif value == 2:
                point = get_value('points') + 1
            elif value == 3:
                point = get_value('points') + 2
            elif value == 4:
                point = get_value('points') + 3
            elif value == 5:
                point = get_value('points') + 4
            elif value == 6:
                point = get_value('points') + 5

            update_value('points', point)

	# The function that shows games menu
    def games_menu(m):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        button1 = types.KeyboardButton("üé∞ –ö–∞–∑–∏–Ω–æ")
        button2 = types.KeyboardButton("üéØ –î–∞—Ä—Ç—Å")
        button3 = types.KeyboardButton("üé≥ –ë–æ—É–ª—ñ–Ω–≥")
        button4 = types.KeyboardButton("üí∞ –ë–∞–ª–∞–Ω—Å")
        button_back = types.KeyboardButton("üõèÔ∏è –ù–∞ –≥–æ–ª–æ–≤–Ω—É")
        markup.add(button1, button2, button3, button4, button_back)
        bot.send_message(message.chat.id, m, reply_markup=markup)

	# Game_–ë–æ—É–ª—ñ–Ω–≥: The function allows you to throw the ball
    def throw_ball(t, m):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        button1 = types.KeyboardButton(t)
        button_back = types.KeyboardButton("üê∏ –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –º–µ–Ω—é")
        markup.add(button1, button_back)
        bot.send_message(message.chat.id, m, reply_markup=markup)
        sent = bot.send_dice(message.chat.id, "üé≥")
        value = sent.dice.value
        if value == 6:
            update_value('points', value)

	# A variable with a message in case the user does not have enough funds to play the game
    money_false_message = "<b><i>–ù–µ –¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å—ñ (</i>\n" \
                          "–ó–∞—Ä–æ–±–∏ –≥—Ä–æ—à–µ–Ω—è—Ç –≥—Ä–∞—é—á–∏ —É üéØ –î–∞—Ä—Ç—Å –∞–±–æ üé≥ –ë–æ—É–ª—ñ–Ω–≥!</b>"

    # Buttons that help the user navigate the bot
    if message.text == "üõèÔ∏è –ù–∞ –≥–æ–ª–æ–≤–Ω—É":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = types.KeyboardButton("üß© –í–∏–±—Ä–∞—Ç–∏ –≥—Ä—É")
        button2 = types.KeyboardButton("üíµ –ü—ñ–¥—Ç—Ä–∏–º–∞—Ç–∏")
        markup.add(button1, button2)
        bot.send_message(message.chat.id, "<b>–¢–∏ –Ω–∞ –≥–æ–ª–æ–≤–Ω—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ!</b>", reply_markup=markup)

    elif message.text == "üß© –í–∏–±—Ä–∞—Ç–∏ –≥—Ä—É" or message.text == "üê∏ –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –º–µ–Ω—é":
        games_menu("<b>–ñ–∞–±–µ–Ω—è –ø—Ä–æ–ø–æ–Ω—É—î —Ç–æ–±—ñ –≤–∏–±—Ä–∞—Ç–∏ –≥—Ä—É! üê∏</b>")

    elif message.text == "üíµ –ü—ñ–¥—Ç—Ä–∏–º–∞—Ç–∏":
        SUPPORT_LINK = "https://send.monobank.ua/jar/3AxAFP26Gh"
        SUPPORT_PHOTO = open("support_photo.jpg", "rb")
        bot.send_photo(message.chat.id, SUPPORT_PHOTO, caption="<b>–ü—ñ–¥—Ç—Ä–∏–º–∞–π FROGY!</b>\n"
                                                               "<b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –±–∞–Ω–∫—É: </b>"
                                                               f"{SUPPORT_LINK} \n"
                                                               "<b>–î—è–∫—É—é —Ç–æ–±—ñ ‚ù§</b>")

    elif message.text == "üí∞ –ë–∞–ª–∞–Ω—Å":
        bot.send_message(message.chat.id, f"<b><i>–¢–≤—ñ–π –ø–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å: {get_value('balance')} fr üí∏</i></b>")

    # GAME_–ö–∞–∑–∏–Ω–æ
    elif message.text == "üé∞ –ö–∞–∑–∏–Ω–æ":
        if get_value('balance') < 5:
            bot.send_message(message.chat.id, money_false_message)
        else:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            button1 = types.KeyboardButton("üíµ –í–∏–±—Ä–∞—Ç–∏ —Å—Ç–∞–≤–∫—É")
            button_back = types.KeyboardButton("üê∏ –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –º–µ–Ω—é")
            markup.add(button1, button_back)
            bot.send_message(message.chat.id,
                             "<b><i>–ü—Ä–∞–≤–∏–ª–∞ –≥—Ä–∏ üé∞ –ö–∞–∑–∏–Ω–æ:</i></b>\n\n"
                             "‚ñ´ —Å—Ç–∞–≤–∫–∞ 5 fr:\n"
                             "       <b>BAR</b> - 50 fr\n"
                             "       ü´ê - 100 fr\n"
                             "       üçã - 200 fr\n"
                             "       7Ô∏è‚É£7Ô∏è‚É£7Ô∏è‚É£ - 300 fr\n\n"
                             "‚ñ´ —Å—Ç–∞–≤–∫–∞ 10 fr:\n"
                             "       <b>BAR</b> - 100 fr\n"
                             "       ü´ê - 200 fr\n"
                             "       üçã - 400 fr\n"
                             "       7Ô∏è‚É£7Ô∏è‚É£7Ô∏è‚É£ - 600 fr\n\n"
                             "‚ñ´ —Å—Ç–∞–≤–∫–∞ 50 fr:\n"
                             "       <b>BAR</b> - 150 fr\n"
                             "       ü´ê - 300 fr\n"
                             "       üçã - 600 fr\n"
                             "       7Ô∏è‚É£7Ô∏è‚É£7Ô∏è‚É£ - 900 fr\n\n"
                             "‚ñ´ —Å—Ç–∞–≤–∫–∞ 100 fr:\n"
                             "       <b>BAR</b> - 200 fr\n"
                             "       ü´ê - 400 fr\n"
                             "       üçã - 800 fr\n"
                             "       7Ô∏è‚É£7Ô∏è‚É£7Ô∏è‚É£ - 1200 fr\n\n"
                             f"<b><i>–¢–≤—ñ–π –ø–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å: {get_value('balance')} fr üí∏</i></b>", reply_markup=markup)

    elif message.text == "üíµ –í–∏–±—Ä–∞—Ç–∏ —Å—Ç–∞–≤–∫—É" or message.text == "üßø –ü–æ—Å—Ç–∞–≤–∏—Ç–∏ —ñ–Ω—à—É —Å—Ç–∞–≤–∫—É":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=4)
        button1 = types.KeyboardButton("5 fr üíµ")
        button2 = types.KeyboardButton("10 fr üíµ")
        button3 = types.KeyboardButton("50 fr üíµ")
        button4 = types.KeyboardButton("100 fr üíµ")
        button_back = types.KeyboardButton("üê∏ –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –º–µ–Ω—é")
        markup.add(button1, button2, button3, button4, button_back)
        bot.send_message(message.chat.id, "<b>–°–∫—ñ–ª—å–∫–∏ –ø–æ—Å—Ç–∞–≤–∏—à? üòè</b>", reply_markup=markup)

    elif message.text == "5 fr üíµ":
        rate_menu(5)
    elif message.text == "üü¢ –ö—Ä—É—Ç–∏—Ç–∏ (–°—Ç–∞–≤–∫–∞: 5 fr)":
        rate_calc(5, 50, 100, 200, 300)
    elif message.text == "10 fr üíµ":
        rate_menu(10)
    elif message.text == "üü¢ –ö—Ä—É—Ç–∏—Ç–∏ (–°—Ç–∞–≤–∫–∞: 10 fr)":
        rate_calc(10, 100, 200, 400, 600)
    elif message.text == "50 fr üíµ":
        rate_menu(50)
    elif message.text == "üü¢ –ö—Ä—É—Ç–∏—Ç–∏ (–°—Ç–∞–≤–∫–∞: 50 fr)":
        rate_calc(50, 150, 300, 600, 900)
    elif message.text == "100 fr üíµ":
        rate_menu(100)
    elif message.text == "üü¢ –ö—Ä—É—Ç–∏—Ç–∏ (–°—Ç–∞–≤–∫–∞: 100 fr)":
        rate_calc(100, 200, 400, 800, 1200)

    # Game_–î–∞—Ä—Ç—Å
    elif message.text == "üéØ –î–∞—Ä—Ç—Å":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        button1 = types.KeyboardButton("‚ñ∂ –ü–æ—á–∞—Ç–∏ –≥—Ä—É")
        button_back = types.KeyboardButton("üê∏ –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –º–µ–Ω—é")
        markup.add(button1, button_back)
        bot.send_message(message.chat.id,
                         "<b><i>–ü—Ä–∞–≤–∏–ª–∞ –≥—Ä–∏ üéØ –î–∞—Ä—Ç—Å:</i></b>\n\n"
                         "‚ñ´ 3 —Å–ø—Ä–æ–±–∏\n"
                         "‚ñ´ –≤–ª—É—á–µ–Ω–Ω—è –≤ —è–±–ª—É—á–∫–æ - 5 –±–∞–ª—ñ–≤\n"
                         "       –¥—Ä—É–≥–µ –∫–æ–ª–æ - 4 –±–∞–ª–∏\n"
                         "       —Ç—Ä–µ—Ç—î –∫–æ–ª–æ - 3 –±–∞–ª–∏\n"
                         "       —á–µ—Ç–≤–µ—Ä—Ç–µ –∫–æ–ª–æ - 2 –±–∞–ª–∏\n"
                         "       –ø\'—è—Ç–µ –∫–æ–ª–æ - 1 –±–∞–ª\n"
                         "       –ø–æ–≤–∑ –º—ñ—à–µ–Ω—å - 0 –±–∞–ª—ñ–≤\n"
                         "‚ñ´ —è–∫—â–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±–∞–ª—ñ–≤ –¥–æ—Ä—ñ–≤–Ω—é—î –∞–±–æ\n"
                         "       –ø–µ—Ä–µ–±—ñ–ª—å—à—É—î 8 - —Ç–∏ –≤–∏–≥—Ä–∞–≤\n"
                         "       —è–∫—â–æ –Ω—ñ - —Ç–∏ –ø—Ä–æ–≥—Ä–∞–≤\n"
                         "‚ñ´ –∫–æ–∂–µ–Ω –≤–∏–≥—Ä–∞—à + 10 fr –Ω–∞ –±–∞–ª–∞–Ω—Å\n\n"
                         "<b><i>–©–∞—Å—Ç–∏ —Ç–æ–±—ñ! üòÑ</i></b>", reply_markup=markup)

    elif message.text == "‚ñ∂ –ü–æ—á–∞—Ç–∏ –≥—Ä—É" or message.text == "‚Ü© –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ —â–µ —Ä–∞–∑":
        update_value('points', 0)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        button1 = types.KeyboardButton("üü¢ –ö–∏–Ω—É—Ç–∏")
        button_back = types.KeyboardButton("üê∏ –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –º–µ–Ω—é")
        markup.add(button1, button_back)
        bot.send_message(message.chat.id, "<b>–ö–∏–¥–∞–π!</b>", reply_markup=markup)

    elif message.text == "üü¢ –ö–∏–Ω—É—Ç–∏":
        throw_dart("üü° –ö–∏–Ω—É—Ç–∏", "<i>–ü–µ—Ä—à–∞ —Å–ø—Ä–æ–±–∞</i>")
    elif message.text == "üü° –ö–∏–Ω—É—Ç–∏":
        throw_dart("üî¥ –ö–∏–Ω—É—Ç–∏", "<i>–î—Ä—É–≥–∞ —Å–ø—Ä–æ–±–∞\n–ë—É–¥—å –æ–±–µ—Ä–µ–∂–Ω–∏–º! –£ —Ç–µ–±–µ –∑–∞–ª–∏—à–∏–ª–∞—Å—è –æ—Å—Ç–∞–Ω–Ω—è —Å–ø—Ä–æ–±–∞</i>")
    elif message.text == "üî¥ –ö–∏–Ω—É—Ç–∏":
        throw_dart("‚Ü© –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ —â–µ —Ä–∞–∑", "<i>–¢—Ä–µ—Ç—è —Å–ø—Ä–æ–±–∞</i>")
        time.sleep(3)
        if get_value('points') >= 8:
            update_value('balance', get_value('balance') + 10)
            result_message = "<b>–í—ñ—Ç–∞—é! –¢–∏ –≤–∏–≥—Ä–∞–≤ üéâ</b>\n" \
                             "<i>–í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–≤–Ω–µ–Ω–æ –Ω–∞ 10 fr</i>"
        else:
            result_message = "<b>–ù–∞ –∂–∞–ª—å, —Ç–∏ –ø—Ä–æ–≥—Ä–∞–≤ üòï</b>"
        bot.send_message(message.chat.id, f"{result_message}\n<i>–¢–≤—ñ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {get_value('points')}</i>")

    # Game_–ë–æ—É–ª—ñ–Ω–≥
    elif message.text == "üé≥ –ë–æ—É–ª—ñ–Ω–≥":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        button1 = types.KeyboardButton("‚ñ∂ –Ø –≥–æ—Ç–æ–≤–∏–π")
        button_back = types.KeyboardButton("üê∏ –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –º–µ–Ω—é")
        markup.add(button1, button_back)
        bot.send_message(message.chat.id, "<b><i>–ü—Ä–∞–≤–∏–ª–∞ –≥—Ä–∏ üé≥ –ë–æ—É–ª—ñ–Ω–≥:</i></b>\n"
                                          "\n"
                                          "‚ñ´ 5 —Å–ø—Ä–æ–±\n"
                                          "‚ñ´ —Ö–æ—á –æ–¥–∏–Ω —Å—Ç—Ä–∞–π–∫ - —Ç–≤–æ—è –ø–µ—Ä–µ–º–æ–≥–∞\n"
                                          "       –Ω—ñ —Ä–∞–∑—É –Ω–µ –∑–±–∏–≤ –≤—Å—ñ –∫–µ–≥–ª—ñ - —Ç–∏ –ø—Ä–æ–≥—Ä–∞–≤\n"
                                          "‚ñ´ –∫–æ–∂–µ–Ω –≤–∏–≥—Ä–∞—à + 20 fr –Ω–∞ –±–∞–ª–∞–Ω—Å\n"
                                          "     \n"
                                          "<b><i>–ü–æ–∫–∞–∂–∏ —è–∫ –ø–æ—Ç—Ä—ñ–±–Ω–æ! üí™üèª</i></b>", reply_markup=markup)

    elif message.text == "‚ñ∂ –Ø –≥–æ—Ç–æ–≤–∏–π" or message.text == "‚Ü™ –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ —â–µ —Ä–∞–∑":
        update_value('points', 0)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        button1 = types.KeyboardButton("üü¢ –ö–∏–Ω—É—Ç–∏ –∫—É–ª—é")
        button_back = types.KeyboardButton("üê∏ –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –º–µ–Ω—é")
        markup.add(button1, button_back)
        bot.send_message(message.chat.id, "<b>–ö–∏–¥–∞–π!</b>", reply_markup=markup)

    elif message.text == "üü¢ –ö–∏–Ω—É—Ç–∏ –∫—É–ª—é":
        throw_ball("üü† –ö–∏–Ω—É—Ç–∏ –∫—É–ª—é", "<i>–ü–µ—Ä—à–∞ —Å–ø—Ä–æ–±–∞</i>")
    elif message.text == "üü† –ö–∏–Ω—É—Ç–∏ –∫—É–ª—é":
        throw_ball("üü° –ö–∏–Ω—É—Ç–∏ –∫—É–ª—é", "<i>–î—Ä—É–≥–∞ —Å–ø—Ä–æ–±–∞</i>")
    elif message.text == "üü° –ö–∏–Ω—É—Ç–∏ –∫—É–ª—é":
        throw_ball("‚ö™Ô∏è–ö–∏–Ω—É—Ç–∏ –∫—É–ª—é", "<i>–¢—Ä–µ—Ç—è —Å–ø—Ä–æ–±–∞</i>")
    elif message.text == "‚ö™Ô∏è–ö–∏–Ω—É—Ç–∏ –∫—É–ª—é":
        throw_ball("üî¥ –ö–∏–Ω—É—Ç–∏ –∫—É–ª—é", "<i>–ß–µ—Ç–≤–µ—Ä—Ç–∞ —Å–ø—Ä–æ–±–∞</i>")
    elif message.text == "üî¥ –ö–∏–Ω—É—Ç–∏ –∫—É–ª—é":
        throw_ball("‚Ü™ –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ —â–µ —Ä–∞–∑", "<i>–ü'—è—Ç–∞ —Å–ø—Ä–æ–±–∞</i>")
        time.sleep(4)
        if get_value('points') >= 6:
            update_value('balance', get_value('balance') + 20)
            results_message = "<b>–Æ—Ö—É—É —Ç–≤–æ—è –ø–µ—Ä–º–æ–≥–∞ ü§©</b>\n" \
                              "<i>–ë–∞–ª–∞–Ω—Å –ø–æ–ø–æ–≤–Ω–µ–Ω–æ –Ω–∞ 20 fr</i>\n" \
                              "<i>–í–ª—É—á–Ω–æ –ø–æ—Ü—ñ–ª–∏–≤!</i>"

        else:
            results_message = "<b>–¢–∏ –ø—Ä–æ–≥—Ä–∞–≤ ü´§</b>\n" \
                              "<i>–°–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑!</i>"

        bot.send_message(message.chat.id, results_message)

    else:
        # In case the buttons don't exist
        bot.send_message(message.chat.id, "<i>–£–ø—Å—Å, —Ç–∞–∫–æ—ó –∫–æ–º–∞–Ω–¥–∏ –Ω–µ —ñ–Ω—Å—É—î (</i>")

bot.polling(none_stop=False, interval=0) # A line of code to keep the bot running all the time
